#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Database.Model
{
	
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum DFA_ProjectClaim_DFA_ApprovalPendingRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Adjudicator", 0, "#0000ff")]
		Adjudicator = 222710000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Compliance Check", 1, "#0000ff")]
		ComplianceCheck = 222710001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Qualified Receiver", 2, "#0000ff")]
		QualifiedReceiver = 222710002,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum DFA_ProjectClaim_DFA_Decision
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Approved", 0, "#0000ff")]
		Approved = 222710000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Approved with Exclusions", 3, "#0000ff")]
		ApprovedWithExclusions = 222710003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Ineligible", 1, "#0000ff")]
		Ineligible = 222710001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Withdrawn", 2, "#0000ff")]
		Withdrawn = 222710002,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum DFA_ProjectClaim_DFA_DecisionCopy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Approved", 0, "#0000ff")]
		Approved = 222710000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Approved with Exclusions", 3, "#0000ff")]
		ApprovedWithExclusions = 222710003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Ineligible", 1, "#0000ff")]
		Ineligible = 222710001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Withdrawn", 2, "#0000ff")]
		Withdrawn = 222710002,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum DFA_ProjectClaim_DFA_FundedBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("CAS Payment", 0, "#0000ff")]
		CasPayment = 222710000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("From Advance", 1, "#0000ff")]
		FromAdvance = 222710001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Remaining Advance and CAS Payment", 2, "#0000ff")]
		RemainingAdvanceAndCasPayment = 222710002,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum DFA_ProjectClaim_DFA_SubmittedBpf
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Pending", 0, "#0000ff")]
		Pending = 222710000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Received", 1, "#0000ff")]
		Received = 222710001,
	}
	
	/// <summary>
	/// Status of the Recovery Claim
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum DFA_ProjectClaim_StateCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Active", 0)]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 1)]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the Recovery Claim
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum DFA_ProjectClaim_StatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Adjudicator", 6, "#0000ff")]
		Adjudicator = 222710005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Approval Pending", 3, "#0000ff")]
		ApprovalPending = 222710002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Closed", 5, "#0000ff")]
		Closed_Active_222710004 = 222710004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Closed", 10, "#0000ff")]
		Closed_Active_222710009 = 222710009,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Compliance Check", 7, "#0000ff")]
		ComplianceCheck = 222710006,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Decision Made", 4, "#0000ff")]
		DecisionMade_Active_222710003 = 222710003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Decision Made", 9, "#0000ff")]
		DecisionMade_Active_222710008 = 222710008,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Draft", 0, "#0000ff")]
		Draft = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Expense Authority", 11, "#0000ff")]
		ExpenseAuthority = 222710010,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 12, "#0000ff")]
		Inactive = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Qualified Receiver", 8, "#0000ff")]
		QualifiedReceiver = 222710007,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Submitted", 1, "#0000ff")]
		Submitted = 222710000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Under Review", 2, "#0000ff")]
		UnderReview = 222710001,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("dfa_projectclaim")]
	public partial class DFA_ProjectClaim : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the dfa_projectclaim entity
		/// </summary>
		public partial class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DFA_AdjudicatorAdditionalInForE = "dfa_adjudicatoradditionalinfore";
			public const string DFA_AdjudicatorAdditionalInForename = "dfa_adjudicatoradditionalinforename";
			public const string DFA_AdjudicatorBluebookRates = "dfa_adjudicatorbluebookrates";
			public const string DFA_AdjudicatorBluebookRatesName = "dfa_adjudicatorbluebookratesname";
			public const string DFA_AdjudicatorContracts = "dfa_adjudicatorcontracts";
			public const string DFA_AdjudicatorContractsName = "dfa_adjudicatorcontractsname";
			public const string DFA_AdjudicatorGeneralLedger = "dfa_adjudicatorgeneralledger";
			public const string DFA_AdjudicatorGeneralLedgerName = "dfa_adjudicatorgeneralledgername";
			public const string DFA_AdjudicatorOvertimeWageDocumentation = "dfa_adjudicatorovertimewagedocumentation";
			public const string DFA_AdjudicatorOvertimeWageDocumentationName = "dfa_adjudicatorovertimewagedocumentationname";
			public const string DFA_AdjudicatorProofOfPayment = "dfa_adjudicatorproofofpayment";
			public const string DFA_AdjudicatorProofOfPaymentName = "dfa_adjudicatorproofofpaymentname";
			public const string DFA_AdjudicatorReviewedInvoice = "dfa_adjudicatorreviewedinvoice";
			public const string DFA_AdjudicatorReviewedInvoiceName = "dfa_adjudicatorreviewedinvoicename";
			public const string DFA_AdjustmentClaimUnderReview = "dfa_adjustmentclaimunderreview";
			public const string DFA_AdjustmentClaimUnderReviewName = "dfa_adjustmentclaimunderreviewname";
			public const string DFA_AdvancedDrawDownAmount = "dfa_advanceddrawdownamount";
			public const string DFA_AdvancedDrawDownAmount_Base = "dfa_advanceddrawdownamount_base";
			public const string DFA_AdvancePaymentAmount = "dfa_advancepaymentamount";
			public const string DFA_AdvancePaymentAmount_Base = "dfa_advancepaymentamount_base";
			public const string DFA_ApprovalPendingAdditionalInfoRequested = "dfa_approvalpendingadditionalinforequested";
			public const string DFA_ApprovalPendingAdditionalInfoRequestedName = "dfa_approvalpendingadditionalinforequestedname";
			public const string DFA_ApprovalPendingInProgress = "dfa_approvalpendinginprogress";
			public const string DFA_ApprovalPendingInProgressName = "dfa_approvalpendinginprogressname";
			public const string DFA_ApprovalPendingRole = "dfa_approvalpendingrole";
			public const string DFA_ApprovalPendingRoleName = "dfa_approvalpendingrolename";
			public const string DFA_ApprovedTotal = "dfa_approvedtotal";
			public const string DFA_ApprovedTotal_Base = "dfa_approvedtotal_base";
			public const string DFA_ApprovedTotal_Date = "dfa_approvedtotal_date";
			public const string DFA_ApprovedTotal_State = "dfa_approvedtotal_state";
			public const string DFA_ApprovedTotalCopy = "dfa_approvedtotalcopy";
			public const string DFA_ApprovedTotalCopy_Base = "dfa_approvedtotalcopy_base";
			public const string DFA_ApprovedTotalMinusCostSharing = "dfa_approvedtotalminuscostsharing";
			public const string DFA_ApprovedTotalMinusCostSharing_Base = "dfa_approvedtotalminuscostsharing_base";
			public const string DFA_ApprovedTotalMinusCostSharingCopy = "dfa_approvedtotalminuscostsharingcopy";
			public const string DFA_ApprovedTotalMinusCostSharingCopy_Base = "dfa_approvedtotalminuscostsharingcopy_base";
			public const string DFA_AssignedToAdjudicator = "dfa_assignedtoadjudicator";
			public const string DFA_AssignedToAdjudicatorName = "dfa_assignedtoadjudicatorname";
			public const string DFA_BpfClosedAte = "dfa_bpfclosedate";
			public const string DFA_CaseId = "dfa_caseid";
			public const string DFA_CaseiDnaMe = "dfa_caseidname";
			public const string DFA_CasInvoiceAmount = "dfa_casinvoiceamount";
			public const string DFA_CasInvoiceAmount_Base = "dfa_casinvoiceamount_base";
			public const string DFA_CasInvoiceStatus = "dfa_casinvoicestatus";
			public const string DFA_CasPaymentAmount = "dfa_caspaymentamount";
			public const string DFA_CasPaymentAmount_Base = "dfa_caspaymentamount_base";
			public const string DFA_CasPaymentDate = "dfa_caspaymentdate";
			public const string DFA_CasPaymentNumber = "dfa_caspaymentnumber";
			public const string DFA_CasPaymentStatus = "dfa_caspaymentstatus";
			public const string DFA_ClaimAmount = "dfa_claimamount";
			public const string DFA_ClaimAmount_Base = "dfa_claimamount_base";
			public const string DFA_ClaimBpfStages = "dfa_claimbpfstages";
			public const string DFA_ClaimBpfStagesName = "dfa_claimbpfstagesname";
			public const string DFA_ClaimBpfSubStages = "dfa_claimbpfsubstages";
			public const string DFA_ClaimBpfSubStagesName = "dfa_claimbpfsubstagesname";
			public const string DFA_ClaimEligibleGstCopy = "dfa_claimeligiblegstcopy";
			public const string DFA_ClaimEligibleGstCopy_Base = "dfa_claimeligiblegstcopy_base";
			public const string DFA_ClaimPaidDate = "dfa_claimpaiddate";
			public const string DFA_ClaimReceivedByEMCRDate = "dfa_claimreceivedbyemcrdate";
			public const string DFA_ClaimReceivedDate = "dfa_claimreceiveddate";
			public const string DFA_ClaimTotal = "dfa_claimtotal";
			public const string DFA_ClaimTotal_Base = "dfa_claimtotal_base";
			public const string DFA_ClaimTotal_Date = "dfa_claimtotal_date";
			public const string DFA_ClaimTotal_State = "dfa_claimtotal_state";
			public const string DFA_ClaimTotalCopy = "dfa_claimtotalcopy";
			public const string DFA_ClaimTotalCopy_Base = "dfa_claimtotalcopy_base";
			public const string DFA_ClaimType = "dfa_claimtype";
			public const string DFA_ClaimTypeName = "dfa_claimtypename";
			public const string DFA_ClientCodeId = "dfa_clientcodeid";
			public const string DFA_ClientCodeIdName = "dfa_clientcodeidname";
			public const string DFA_CodingBlockSubmissionStatus = "dfa_codingblocksubmissionstatus";
			public const string DFA_CodingBlockSubmissionStatusName = "dfa_codingblocksubmissionstatusname";
			public const string DFA_ComplianceCheckAdditionalInForE = "dfa_compliancecheckadditionalinfore";
			public const string DFA_ComplianceCheckAdditionalInForename = "dfa_compliancecheckadditionalinforename";
			public const string DFA_ComplianceCheckBluebookRates = "dfa_compliancecheckbluebookrates";
			public const string DFA_ComplianceCheckBluebookRatesName = "dfa_compliancecheckbluebookratesname";
			public const string DFA_ComplianceCheckContracts = "dfa_compliancecheckcontracts";
			public const string DFA_ComplianceCheckContractsName = "dfa_compliancecheckcontractsname";
			public const string DFA_ComplianceCheckGeneralLedger = "dfa_compliancecheckgeneralledger";
			public const string DFA_ComplianceCheckGeneralLedgerName = "dfa_compliancecheckgeneralledgername";
			public const string DFA_ComplianceCheckOvertimeWageDocumentation = "dfa_compliancecheckovertimewagedocumentation";
			public const string DFA_ComplianceCheckOvertimeWageDocumentationName = "dfa_compliancecheckovertimewagedocumentationname";
			public const string DFA_ComplianceCheckProofOfPayment = "dfa_compliancecheckproofofpayment";
			public const string DFA_ComplianceCheckProofOfPaymentName = "dfa_compliancecheckproofofpaymentname";
			public const string DFA_ComplianceCheckReviewedInvoice = "dfa_compliancecheckreviewedinvoice";
			public const string DFA_ComplianceCheckReviewedInvoiceName = "dfa_compliancecheckreviewedinvoicename";
			public const string DFA_CostSharing = "dfa_costsharing";
			public const string DFA_CostSharingAdjustment = "dfa_costsharingadjustment";
			public const string DFA_CostSharingAdjustment_Base = "dfa_costsharingadjustment_base";
			public const string DFA_CostSharingAdjustmentValue = "dfa_costsharingadjustmentvalue";
			public const string DFA_CostSharingAdjustmentValue_Base = "dfa_costsharingadjustmentvalue_base";
			public const string DFA_CostSharingTemp = "dfa_costsharingtemp";
			public const string DFA_CreatedOnPortal = "dfa_createdonportal";
			public const string DFA_CreatedOnPortalName = "dfa_createdonportalname";
			public const string DFA_DateGoodsAndServicesReceived = "dfa_dategoodsandservicesreceived";
			public const string DFA_DateReceivedInProvince = "dfa_datereceivedinprovince";
			public const string DFA_DateSentForEAApproval = "dfa_datesentforeaapproval";
			public const string DFA_Decision = "dfa_decision";
			public const string DFA_DecisionCopy = "dfa_decisioncopy";
			public const string DFA_DecisionCopyName = "dfa_decisioncopyname";
			public const string DFA_DecisionName = "dfa_decisionname";
			public const string DFA_DFA_ClientCode_DFA_ProjectClaim_ClientCodeId = "dfa_dfa_clientcode_dfa_projectclaim_ClientCodeId";
			public const string DFA_EAName = "dfa_eaname";
			public const string DFA_EANameName = "dfa_eanamename";
			public const string DFA_EANameYomiName = "dfa_eanameyominame";
			public const string DFA_EligiblePayable = "dfa_eligiblepayable";
			public const string DFA_EligiblePayable_Base = "dfa_eligiblepayable_base";
			public const string DFA_EligibleRecoveryPayableAt90 = "dfa_eligiblerecoverypayableat90";
			public const string DFA_EligibleRecoveryPayableAt90_Base = "dfa_eligiblerecoverypayableat90_base";
			public const string DFA_EMCR_ExpenseProject_DFA_ProjectClaim_ProjectNumber = "dfa_emcr_expenseproject_dfa_projectclaim_ProjectNumber";
			public const string DFA_EMCR_ResponsibilityCentre_DFA_ProjectClaim_Resp = "dfa_emcr_responsibilitycentre_dfa_projectclaim_RESP";
			public const string DFA_EMCR_ServiceLine_DFA_ProjectClaim_ServiceLine = "dfa_emcr_serviceline_dfa_projectclaim_ServiceLine";
			public const string DFA_EMCR_Stob_DFA_ProjectClaim_Stob = "dfa_emcr_stob_dfa_projectclaim_STOB";
			public const string DFA_EmployeeNumber = "dfa_employeenumber";
			public const string DFA_ExpenseAuthority = "dfa_expenseauthority";
			public const string DFA_ExpenseAuthorityAdditionalInForE = "dfa_expenseauthorityadditionalinfore";
			public const string DFA_ExpenseAuthorityAdditionalInForename = "dfa_expenseauthorityadditionalinforename";
			public const string DFA_ExpenseAuthorityBluebookRates = "dfa_expenseauthoritybluebookrates";
			public const string DFA_ExpenseAuthorityBluebookRatesName = "dfa_expenseauthoritybluebookratesname";
			public const string DFA_ExpenseAuthorityContracts = "dfa_expenseauthoritycontracts";
			public const string DFA_ExpenseAuthorityContractsName = "dfa_expenseauthoritycontractsname";
			public const string DFA_ExpenseAuthorityGeneralLedger = "dfa_expenseauthoritygeneralledger";
			public const string DFA_ExpenseAuthorityGeneralLedgerName = "dfa_expenseauthoritygeneralledgername";
			public const string DFA_ExpenseAuthorityName = "dfa_expenseauthorityname";
			public const string DFA_ExpenseAuthorityOvertimeWageDocumentation = "dfa_expenseauthorityovertimewagedocumentation";
			public const string DFA_ExpenseAuthorityOvertimeWageDocumentationName = "dfa_expenseauthorityovertimewagedocumentationname";
			public const string DFA_ExpenseAuthorityProofOfPayment = "dfa_expenseauthorityproofofpayment";
			public const string DFA_ExpenseAuthorityProofOfPaymentName = "dfa_expenseauthorityproofofpaymentname";
			public const string DFA_ExpenseAuthorityReviewedInvoice = "dfa_expenseauthorityreviewedinvoice";
			public const string DFA_ExpenseAuthorityReviewedInvoiceName = "dfa_expenseauthorityreviewedinvoicename";
			public const string DFA_FinalClaim = "dfa_finalclaim";
			public const string DFA_FinalClaimName = "dfa_finalclaimname";
			public const string DFA_FundedBy = "dfa_fundedby";
			public const string DFA_FundedByName = "dfa_fundedbyname";
			public const string DFA_Gst5 = "dfa_gst5";
			public const string DFA_Gst5_Base = "dfa_gst5_base";
			public const string DFA_IncludedInAdvancedPaymentCalculations = "dfa_includedinadvancedpaymentcalculations";
			public const string DFA_IncludedInAdvancedPaymentCalculationsName = "dfa_includedinadvancedpaymentcalculationsname";
			public const string DFA_InvoiceChange = "dfa_invoicechange";
			public const string DFA_InvoiceChangeName = "dfa_invoicechangename";
			public const string DFA_InvoiceDate = "dfa_invoicedate";
			public const string DFA_InvoiceNumber = "dfa_invoicenumber";
			public const string DFA_InvoiceTotal = "dfa_invoicetotal";
			public const string DFA_InvoiceTotal_Base = "dfa_invoicetotal_base";
			public const string DFA_IsAdjustmentClaim = "dfa_isadjustmentclaim";
			public const string DFA_IsAdjustmentClaimName = "dfa_isadjustmentclaimname";
			public const string DFA_IsFirstClaim = "dfa_isfirstclaim";
			public const string DFA_IsFirstClaimName = "dfa_isfirstclaimname";
			public const string DFA_LastCodingBlockSubmissionError = "dfa_lastcodingblocksubmissionerror";
			public const string DFA_LessFirst1000 = "dfa_lessfirst1000";
			public const string DFA_LessFirst1000_Base = "dfa_lessfirst1000_base";
			public const string DFA_Name = "dfa_name";
			public const string DFA_OnetimeDeductionAmount = "dfa_onetimedeductionamount";
			public const string DFA_OnetimeDeductionAmount_Base = "dfa_onetimedeductionamount_base";
			public const string DFA_PaidClaimAmount = "dfa_paidclaimamount";
			public const string DFA_PaidClaimAmount_Base = "dfa_paidclaimamount_base";
			public const string DFA_PayGroupType = "dfa_paygrouptype";
			public const string DFA_PayGroupTypeName = "dfa_paygrouptypename";
			public const string DFA_PaymentAdviceComments = "dfa_paymentadvicecomments";
			public const string DFA_PortalSubmitted = "dfa_portalsubmitted";
			public const string DFA_PortalSubmittedName = "dfa_portalsubmittedname";
			public const string DFA_ProjectClaimId = "dfa_projectclaimid";
			public const string Id = "dfa_projectclaimid";
			public const string DFA_ProjectNumber = "dfa_projectnumber";
			public const string DFA_ProjectNumberName = "dfa_projectnumbername";
			public const string DFA_ProjectStatusReportId = "dfa_projectstatusreportid";
			public const string DFA_ProjectStatusReportIdName = "dfa_projectstatusreportidname";
			public const string DFA_Purpose = "dfa_purpose";
			public const string DFA_QualifiedReceiver = "dfa_qualifiedreceiver";
			public const string DFA_QualifiedReceiverAdditionalInForE = "dfa_qualifiedreceiveradditionalinfore";
			public const string DFA_QualifiedReceiverAdditionalInForename = "dfa_qualifiedreceiveradditionalinforename";
			public const string DFA_QualifiedReceiverBluebookRates = "dfa_qualifiedreceiverbluebookrates";
			public const string DFA_QualifiedReceiverBluebookRatesName = "dfa_qualifiedreceiverbluebookratesname";
			public const string DFA_QualifiedReceiverContracts = "dfa_qualifiedreceivercontracts";
			public const string DFA_QualifiedReceiverContractsName = "dfa_qualifiedreceivercontractsname";
			public const string DFA_QualifiedReceiverGeneralLedger = "dfa_qualifiedreceivergeneralledger";
			public const string DFA_QualifiedReceiverGeneralLedgerName = "dfa_qualifiedreceivergeneralledgername";
			public const string DFA_QualifiedReceiverName = "dfa_qualifiedreceivername";
			public const string DFA_QualifiedReceiverOvertimeWageDocumentAtIo = "dfa_qualifiedreceiverovertimewagedocumentatio";
			public const string DFA_QualifiedReceiverOvertimeWageDocumentationAmE = "dfa_qualifiedreceiverovertimewagedocumentationame";
			public const string DFA_QualifiedReceiverProofOfPayment = "dfa_qualifiedreceiverproofofpayment";
			public const string DFA_QualifiedReceiverProofOfPaymentName = "dfa_qualifiedreceiverproofofpaymentname";
			public const string DFA_QualifiedReceiverReviewedInvoice = "dfa_qualifiedreceiverreviewedinvoice";
			public const string DFA_QualifiedReceiverReviewedInvoiceName = "dfa_qualifiedreceiverreviewedinvoicename";
			public const string DFA_QualifiedReceiverYomiName = "dfa_qualifiedreceiveryominame";
			public const string DFA_ReadyForEAReview = "dfa_readyforeareview";
			public const string DFA_ReadyForEAReviewName = "dfa_readyforeareviewname";
			public const string DFA_RecommendAtaIon = "dfa_recommendataion";
			public const string DFA_RecoveryPlanId = "dfa_recoveryplanid";
			public const string DFA_RecoveryPlanIdName = "dfa_recoveryplanidname";
			public const string DFA_Resp = "dfa_resp";
			public const string DFA_RespName = "dfa_respname";
			public const string DFA_S3ValidationPassed = "dfa_s3validationpassed";
			public const string DFA_S3ValidationPassedName = "dfa_s3validationpassedname";
			public const string DFA_S3ValidationResult = "dfa_s3validationresult";
			public const string DFA_S3ValidationTrigger = "dfa_s3validationtrigger";
			public const string DFA_SelectedSupplierApiResponse = "dfa_selectedsupplierapiresponse";
			public const string DFA_ServiceLine = "dfa_serviceline";
			public const string DFA_ServiceLineName = "dfa_servicelinename";
			public const string DFA_Site = "dfa_site";
			public const string DFA_StageAdjudicator = "dfa_stageadjudicator";
			public const string DFA_StageApprovedPending = "dfa_stageapprovedpending";
			public const string DFA_StageClosed = "dfa_stageclosed";
			public const string DFA_StageComplianceCheck = "dfa_stagecompliancecheck";
			public const string DFA_StageDecisionMade = "dfa_stagedecisionmade";
			public const string DFA_StageDraft = "dfa_stagedraft";
			public const string DFA_StageExpenseAuthority = "dfa_stageexpenseauthority";
			public const string DFA_StageQualifiedReceiver = "dfa_stagequalifiedreceiver";
			public const string DFA_StageSubmitted = "dfa_stagesubmitted";
			public const string DFA_StageUnderReview = "dfa_stageunderreview";
			public const string DFA_Stob = "dfa_stob";
			public const string DFA_StobName = "dfa_stobname";
			public const string DFA_Submitted = "dfa_submitted";
			public const string DFA_SubmittedBpf = "dfa_submittedbpf";
			public const string DFA_SubmittedBpfName = "dfa_submittedbpfname";
			public const string DFA_SubmittedName = "dfa_submittedname";
			public const string DFA_SupplierName = "dfa_suppliername";
			public const string DFA_SupplierNumber = "dfa_suppliernumber";
			public const string DFA_SystemUser_DFA_ProjectClaim_EAnaMe = "dfa_systemuser_dfa_projectclaim_EAName";
			public const string DFA_SystemUser_DFA_ProjectClaim_QualifiedReceiver = "dfa_systemuser_dfa_projectclaim_QualifiedReceiver";
			public const string DFA_TempApproval = "dfa_tempapproval";
			public const string DFA_TempApprovalName = "dfa_tempapprovalname";
			public const string DFA_TotalActualClaim = "dfa_totalactualclaim";
			public const string DFA_TotalActualClaim_Base = "dfa_totalactualclaim_base";
			public const string DFA_TotalActualClaim_Date = "dfa_totalactualclaim_date";
			public const string DFA_TotalActualClaim_State = "dfa_totalactualclaim_state";
			public const string DFA_TotalActualClaimCopy = "dfa_totalactualclaimcopy";
			public const string DFA_TotalActualClaimCopy_Base = "dfa_totalactualclaimcopy_base";
			public const string DFA_TotalActualInvoice = "dfa_totalactualinvoice";
			public const string DFA_TotalActualInvoice_Base = "dfa_totalactualinvoice_base";
			public const string DFA_TotalApproved = "dfa_totalapproved";
			public const string DFA_TotalApproved_Base = "dfa_totalapproved_base";
			public const string DFA_TotalApproved_Date = "dfa_totalapproved_date";
			public const string DFA_TotalApproved_State = "dfa_totalapproved_state";
			public const string DFA_TotalBeforeTax = "dfa_totalbeforetax";
			public const string DFA_TotalBeforeTax_Base = "dfa_totalbeforetax_base";
			public const string DFA_TotalEligibleGst = "dfa_totaleligiblegst";
			public const string DFA_TotalEligibleGst_Base = "dfa_totaleligiblegst_base";
			public const string DFA_TotalEligibleGst_Date = "dfa_totaleligiblegst_date";
			public const string DFA_TotalEligibleGst_State = "dfa_totaleligiblegst_state";
			public const string DFA_TotalEligibleGstCopy = "dfa_totaleligiblegstcopy";
			public const string DFA_TotalEligibleGstCopy_Base = "dfa_totaleligiblegstcopy_base";
			public const string DFA_TotalGrossGst = "dfa_totalgrossgst";
			public const string DFA_TotalGrossGst_Base = "dfa_totalgrossgst_base";
			public const string DFA_TotalGrossGst_Date = "dfa_totalgrossgst_date";
			public const string DFA_TotalGrossGst_State = "dfa_totalgrossgst_state";
			public const string DFA_TotalGrossGstCopy = "dfa_totalgrossgstcopy";
			public const string DFA_TotalGrossGstCopy_Base = "dfa_totalgrossgstcopy_base";
			public const string DFA_TotalNetInvoicedBeingClaimed = "dfa_totalnetinvoicedbeingclaimed";
			public const string DFA_TotalNetInvoicedBeingClaimed_Base = "dfa_totalnetinvoicedbeingclaimed_base";
			public const string DFA_TotalNetInvoicedBeingClaimed_Date = "dfa_totalnetinvoicedbeingclaimed_date";
			public const string DFA_TotalNetInvoicedBeingClaimed_State = "dfa_totalnetinvoicedbeingclaimed_state";
			public const string DFA_TotalNetInvoicedBeingClaimedCopy = "dfa_totalnetinvoicedbeingclaimedcopy";
			public const string DFA_TotalNetInvoicedBeingClaimedCopy_Base = "dfa_totalnetinvoicedbeingclaimedcopy_base";
			public const string DFA_TotalOfTotalEligible = "dfa_totaloftotaleligible";
			public const string DFA_TotalOfTotalEligible_Base = "dfa_totaloftotaleligible_base";
			public const string DFA_TotalPaid = "dfa_totalpaid";
			public const string DFA_TotalPaid_Base = "dfa_totalpaid_base";
			public const string DFA_TotalPst = "dfa_totalpst";
			public const string DFA_TotalPst_Base = "dfa_totalpst_base";
			public const string DFA_TotalPst_Date = "dfa_totalpst_date";
			public const string DFA_TotalPst_State = "dfa_totalpst_state";
			public const string DFA_TotalPstCopy = "dfa_totalpstcopy";
			public const string DFA_TotalPstCopy_Base = "dfa_totalpstcopy_base";
			public const string DFA_UnderReviewAdditionalInfoRequested = "dfa_underreviewadditionalinforequested";
			public const string DFA_UnderReviewAdditionalInfoRequestedName = "dfa_underreviewadditionalinforequestedname";
			public const string DFA_UnderReviewInProgress = "dfa_underreviewinprogress";
			public const string DFA_UnderReviewInProgressName = "dfa_underreviewinprogressname";
			public const string ExchangerAte = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Lk_DFA_ProjectClaim_CreatedBy = "lk_dfa_projectclaim_createdby";
			public const string Lk_DFA_ProjectClaim_CreatedOnBehalfBy = "lk_dfa_projectclaim_createdonbehalfby";
			public const string Lk_DFA_ProjectClaim_ModifiedBy = "lk_dfa_projectclaim_modifiedby";
			public const string Lk_DFA_ProjectClaim_ModifiedOnBehalfBy = "lk_dfa_projectclaim_modifiedonbehalfby";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ProcessId = "processid";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StateCodename = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodename = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TraversedPath = "traversedpath";
			public const string User_DFA_ProjectClaim = "user_dfa_projectclaim";
			public const string UtcConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public DFA_ProjectClaim(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public DFA_ProjectClaim(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public DFA_ProjectClaim(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "dfa_name";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public DFA_ProjectClaim() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "dfa_projectclaimid";
		
		public const string PrimaryNameAttribute = "dfa_name";
		
		public const string EntitySchemaName = "dfa_projectclaim";
		
		public const string EntityLogicalName = "dfa_projectclaim";
		
		public const string EntityLogicalCollectionName = "dfa_projectclaims";
		
		public const string EntitySetName = "dfa_projectclaims";
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatoradditionalinfore")]
		public System.Nullable<bool> DFA_AdjudicatorAdditionalInForE
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_adjudicatoradditionalinfore");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_adjudicatoradditionalinfore", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatoradditionalinforename")]
		public string DFA_AdjudicatorAdditionalInForename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_adjudicatoradditionalinfore"))
				{
					return this.FormattedValues["dfa_adjudicatoradditionalinfore"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatorbluebookrates")]
		public System.Nullable<bool> DFA_AdjudicatorBluebookRates
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_adjudicatorbluebookrates");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_adjudicatorbluebookrates", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatorbluebookratesname")]
		public string DFA_AdjudicatorBluebookRatesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_adjudicatorbluebookrates"))
				{
					return this.FormattedValues["dfa_adjudicatorbluebookrates"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatorcontracts")]
		public System.Nullable<bool> DFA_AdjudicatorContracts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_adjudicatorcontracts");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_adjudicatorcontracts", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatorcontractsname")]
		public string DFA_AdjudicatorContractsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_adjudicatorcontracts"))
				{
					return this.FormattedValues["dfa_adjudicatorcontracts"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatorgeneralledger")]
		public System.Nullable<bool> DFA_AdjudicatorGeneralLedger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_adjudicatorgeneralledger");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_adjudicatorgeneralledger", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatorgeneralledgername")]
		public string DFA_AdjudicatorGeneralLedgerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_adjudicatorgeneralledger"))
				{
					return this.FormattedValues["dfa_adjudicatorgeneralledger"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatorovertimewagedocumentation")]
		public System.Nullable<bool> DFA_AdjudicatorOvertimeWageDocumentation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_adjudicatorovertimewagedocumentation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_adjudicatorovertimewagedocumentation", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatorovertimewagedocumentationname")]
		public string DFA_AdjudicatorOvertimeWageDocumentationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_adjudicatorovertimewagedocumentation"))
				{
					return this.FormattedValues["dfa_adjudicatorovertimewagedocumentation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatorproofofpayment")]
		public System.Nullable<bool> DFA_AdjudicatorProofOfPayment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_adjudicatorproofofpayment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_adjudicatorproofofpayment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatorproofofpaymentname")]
		public string DFA_AdjudicatorProofOfPaymentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_adjudicatorproofofpayment"))
				{
					return this.FormattedValues["dfa_adjudicatorproofofpayment"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatorreviewedinvoice")]
		public System.Nullable<bool> DFA_AdjudicatorReviewedInvoice
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_adjudicatorreviewedinvoice");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_adjudicatorreviewedinvoice", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjudicatorreviewedinvoicename")]
		public string DFA_AdjudicatorReviewedInvoiceName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_adjudicatorreviewedinvoice"))
				{
					return this.FormattedValues["dfa_adjudicatorreviewedinvoice"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjustmentclaimunderreview")]
		public System.Nullable<bool> DFA_AdjustmentClaimUnderReview
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_adjustmentclaimunderreview");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_adjustmentclaimunderreview", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_adjustmentclaimunderreviewname")]
		public string DFA_AdjustmentClaimUnderReviewName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_adjustmentclaimunderreview"))
				{
					return this.FormattedValues["dfa_adjustmentclaimunderreview"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_advanceddrawdownamount")]
		public Microsoft.Xrm.Sdk.Money DFA_AdvancedDrawDownAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_advanceddrawdownamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_advanceddrawdownamount", value);
			}
		}
		
		/// <summary>
		/// Value of the Advanced Drawdown Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_advanceddrawdownamount_base")]
		public Microsoft.Xrm.Sdk.Money DFA_AdvancedDrawDownAmount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_advanceddrawdownamount_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_advancepaymentamount")]
		public Microsoft.Xrm.Sdk.Money DFA_AdvancePaymentAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_advancepaymentamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_advancepaymentamount", value);
			}
		}
		
		/// <summary>
		/// Value of the Advance Payment Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_advancepaymentamount_base")]
		public Microsoft.Xrm.Sdk.Money DFA_AdvancePaymentAmount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_advancepaymentamount_base");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_advancepaymentamount_base", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvalpendingadditionalinforequested")]
		public System.Nullable<bool> DFA_ApprovalPendingAdditionalInfoRequested
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_approvalpendingadditionalinforequested");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_approvalpendingadditionalinforequested", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvalpendingadditionalinforequestedname")]
		public string DFA_ApprovalPendingAdditionalInfoRequestedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_approvalpendingadditionalinforequested"))
				{
					return this.FormattedValues["dfa_approvalpendingadditionalinforequested"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvalpendinginprogress")]
		public System.Nullable<bool> DFA_ApprovalPendingInProgress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_approvalpendinginprogress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_approvalpendinginprogress", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvalpendinginprogressname")]
		public string DFA_ApprovalPendingInProgressName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_approvalpendinginprogress"))
				{
					return this.FormattedValues["dfa_approvalpendinginprogress"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvalpendingrole")]
		public virtual DFA_ProjectClaim_DFA_ApprovalPendingRole? DFA_ApprovalPendingRole
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DFA_ProjectClaim_DFA_ApprovalPendingRole?)(EntityOptionSetEnum.GetEnum(this, "dfa_approvalpendingrole")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_approvalpendingrole", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvalpendingrolename")]
		public string DFA_ApprovalPendingRoleName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_approvalpendingrole"))
				{
					return this.FormattedValues["dfa_approvalpendingrole"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvedtotal")]
		public Microsoft.Xrm.Sdk.Money DFA_ApprovedTotal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_approvedtotal");
			}
		}
		
		/// <summary>
		/// Value of the Approved Total in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvedtotal_base")]
		public Microsoft.Xrm.Sdk.Money DFA_ApprovedTotal_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_approvedtotal_base");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Approved Total.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvedtotal_date")]
		public System.Nullable<System.DateTime> DFA_ApprovedTotal_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_approvedtotal_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Approved Total.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvedtotal_state")]
		public System.Nullable<int> DFA_ApprovedTotal_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_approvedtotal_state");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvedtotalcopy")]
		public Microsoft.Xrm.Sdk.Money DFA_ApprovedTotalCopy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_approvedtotalcopy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_approvedtotalcopy", value);
			}
		}
		
		/// <summary>
		/// Value of the Approved Total Copy in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvedtotalcopy_base")]
		public Microsoft.Xrm.Sdk.Money DFA_ApprovedTotalCopy_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_approvedtotalcopy_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvedtotalminuscostsharing")]
		public Microsoft.Xrm.Sdk.Money DFA_ApprovedTotalMinusCostSharing
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_approvedtotalminuscostsharing");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_approvedtotalminuscostsharing", value);
			}
		}
		
		/// <summary>
		/// Value of the Approved Total minus Cost Sharing in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvedtotalminuscostsharing_base")]
		public Microsoft.Xrm.Sdk.Money DFA_ApprovedTotalMinusCostSharing_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_approvedtotalminuscostsharing_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvedtotalminuscostsharingcopy")]
		public Microsoft.Xrm.Sdk.Money DFA_ApprovedTotalMinusCostSharingCopy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_approvedtotalminuscostsharingcopy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_approvedtotalminuscostsharingcopy", value);
			}
		}
		
		/// <summary>
		/// Value of the Approved Total minus Cost Sharing Copy in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_approvedtotalminuscostsharingcopy_base")]
		public Microsoft.Xrm.Sdk.Money DFA_ApprovedTotalMinusCostSharingCopy_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_approvedtotalminuscostsharingcopy_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_assignedtoadjudicator")]
		public System.Nullable<bool> DFA_AssignedToAdjudicator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_assignedtoadjudicator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_assignedtoadjudicator", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_assignedtoadjudicatorname")]
		public string DFA_AssignedToAdjudicatorName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_assignedtoadjudicator"))
				{
					return this.FormattedValues["dfa_assignedtoadjudicator"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_bpfclosedate")]
		public System.Nullable<System.DateTime> DFA_BpfClosedAte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_bpfclosedate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_bpfclosedate", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for Case associated with Recovery Claim.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_caseid")]
		public Microsoft.Xrm.Sdk.EntityReference DFA_CaseId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dfa_caseid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_caseid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_caseidname")]
		public string DFA_CaseiDnaMe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_caseid"))
				{
					return this.FormattedValues["dfa_caseid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_casinvoiceamount")]
		public Microsoft.Xrm.Sdk.Money DFA_CasInvoiceAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_casinvoiceamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_casinvoiceamount", value);
			}
		}
		
		/// <summary>
		/// Value of the CAS Invoice Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_casinvoiceamount_base")]
		public Microsoft.Xrm.Sdk.Money DFA_CasInvoiceAmount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_casinvoiceamount_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_casinvoicestatus")]
		public string DFA_CasInvoiceStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_casinvoicestatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_casinvoicestatus", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_caspaymentamount")]
		public Microsoft.Xrm.Sdk.Money DFA_CasPaymentAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_caspaymentamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_caspaymentamount", value);
			}
		}
		
		/// <summary>
		/// Value of the CAS Payment Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_caspaymentamount_base")]
		public Microsoft.Xrm.Sdk.Money DFA_CasPaymentAmount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_caspaymentamount_base");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_caspaymentamount_base", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_caspaymentdate")]
		public System.Nullable<System.DateTime> DFA_CasPaymentDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_caspaymentdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_caspaymentdate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_caspaymentnumber")]
		public string DFA_CasPaymentNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_caspaymentnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_caspaymentnumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_caspaymentstatus")]
		public string DFA_CasPaymentStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_caspaymentstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_caspaymentstatus", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimamount")]
		public Microsoft.Xrm.Sdk.Money DFA_ClaimAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_claimamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_claimamount", value);
			}
		}
		
		/// <summary>
		/// Value of the Claim Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimamount_base")]
		public Microsoft.Xrm.Sdk.Money DFA_ClaimAmount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_claimamount_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimbpfstages")]
		public virtual DFA_ClaimBusinessProcessStages? DFA_ClaimBpfStages
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DFA_ClaimBusinessProcessStages?)(EntityOptionSetEnum.GetEnum(this, "dfa_claimbpfstages")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_claimbpfstages", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimbpfstagesname")]
		public string DFA_ClaimBpfStagesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_claimbpfstages"))
				{
					return this.FormattedValues["dfa_claimbpfstages"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimbpfsubstages")]
		public virtual DFA_ClaimBpfSubStages? DFA_ClaimBpfSubStages
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DFA_ClaimBpfSubStages?)(EntityOptionSetEnum.GetEnum(this, "dfa_claimbpfsubstages")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_claimbpfsubstages", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimbpfsubstagesname")]
		public string DFA_ClaimBpfSubStagesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_claimbpfsubstages"))
				{
					return this.FormattedValues["dfa_claimbpfsubstages"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimeligiblegstcopy")]
		public Microsoft.Xrm.Sdk.Money DFA_ClaimEligibleGstCopy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_claimeligiblegstcopy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_claimeligiblegstcopy", value);
			}
		}
		
		/// <summary>
		/// Value of the Claim Eligible GST Copy in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimeligiblegstcopy_base")]
		public Microsoft.Xrm.Sdk.Money DFA_ClaimEligibleGstCopy_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_claimeligiblegstcopy_base");
			}
		}
		
		/// <summary>
		/// The date the payment was made to the governing body.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimpaiddate")]
		public System.Nullable<System.DateTime> DFA_ClaimPaidDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_claimpaiddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_claimpaiddate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimreceivedbyemcrdate")]
		public System.Nullable<System.DateTime> DFA_ClaimReceivedByEMCRDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_claimreceivedbyemcrdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_claimreceivedbyemcrdate", value);
			}
		}
		
		/// <summary>
		/// The date the claim was submitted from the portal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimreceiveddate")]
		public System.Nullable<System.DateTime> DFA_ClaimReceivedDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_claimreceiveddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_claimreceiveddate", value);
			}
		}
		
		/// <summary>
		/// The amount that is being claimed from all the invoices; the total of 'Total being claimed'.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimtotal")]
		public Microsoft.Xrm.Sdk.Money DFA_ClaimTotal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_claimtotal");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_claimtotal", value);
			}
		}
		
		/// <summary>
		/// Value of the Claim Total in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimtotal_base")]
		public Microsoft.Xrm.Sdk.Money DFA_ClaimTotal_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_claimtotal_base");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Claim total.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimtotal_date")]
		public System.Nullable<System.DateTime> DFA_ClaimTotal_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_claimtotal_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Claim total.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimtotal_state")]
		public System.Nullable<int> DFA_ClaimTotal_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_claimtotal_state");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimtotalcopy")]
		public Microsoft.Xrm.Sdk.Money DFA_ClaimTotalCopy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_claimtotalcopy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_claimtotalcopy", value);
			}
		}
		
		/// <summary>
		/// Value of the Claim Total Copy in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimtotalcopy_base")]
		public Microsoft.Xrm.Sdk.Money DFA_ClaimTotalCopy_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_claimtotalcopy_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimtype")]
		public virtual DFA_RecoveryClaimType? DFA_ClaimType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DFA_RecoveryClaimType?)(EntityOptionSetEnum.GetEnum(this, "dfa_claimtype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_claimtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_claimtypename")]
		public string DFA_ClaimTypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_claimtype"))
				{
					return this.FormattedValues["dfa_claimtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_clientcodeid")]
		public Microsoft.Xrm.Sdk.EntityReference DFA_ClientCodeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dfa_clientcodeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_clientcodeid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_clientcodeidname")]
		public string DFA_ClientCodeIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_clientcodeid"))
				{
					return this.FormattedValues["dfa_clientcodeid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_codingblocksubmissionstatus")]
		public virtual DFA_CodingBlockSubmissionStatus? DFA_CodingBlockSubmissionStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DFA_CodingBlockSubmissionStatus?)(EntityOptionSetEnum.GetEnum(this, "dfa_codingblocksubmissionstatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_codingblocksubmissionstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_codingblocksubmissionstatusname")]
		public string DFA_CodingBlockSubmissionStatusName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_codingblocksubmissionstatus"))
				{
					return this.FormattedValues["dfa_codingblocksubmissionstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckadditionalinfore")]
		public System.Nullable<bool> DFA_ComplianceCheckAdditionalInForE
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_compliancecheckadditionalinfore");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_compliancecheckadditionalinfore", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckadditionalinforename")]
		public string DFA_ComplianceCheckAdditionalInForename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_compliancecheckadditionalinfore"))
				{
					return this.FormattedValues["dfa_compliancecheckadditionalinfore"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckbluebookrates")]
		public System.Nullable<bool> DFA_ComplianceCheckBluebookRates
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_compliancecheckbluebookrates");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_compliancecheckbluebookrates", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckbluebookratesname")]
		public string DFA_ComplianceCheckBluebookRatesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_compliancecheckbluebookrates"))
				{
					return this.FormattedValues["dfa_compliancecheckbluebookrates"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckcontracts")]
		public System.Nullable<bool> DFA_ComplianceCheckContracts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_compliancecheckcontracts");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_compliancecheckcontracts", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckcontractsname")]
		public string DFA_ComplianceCheckContractsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_compliancecheckcontracts"))
				{
					return this.FormattedValues["dfa_compliancecheckcontracts"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckgeneralledger")]
		public System.Nullable<bool> DFA_ComplianceCheckGeneralLedger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_compliancecheckgeneralledger");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_compliancecheckgeneralledger", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckgeneralledgername")]
		public string DFA_ComplianceCheckGeneralLedgerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_compliancecheckgeneralledger"))
				{
					return this.FormattedValues["dfa_compliancecheckgeneralledger"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckovertimewagedocumentation")]
		public System.Nullable<bool> DFA_ComplianceCheckOvertimeWageDocumentation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_compliancecheckovertimewagedocumentation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_compliancecheckovertimewagedocumentation", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckovertimewagedocumentationname")]
		public string DFA_ComplianceCheckOvertimeWageDocumentationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_compliancecheckovertimewagedocumentation"))
				{
					return this.FormattedValues["dfa_compliancecheckovertimewagedocumentation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckproofofpayment")]
		public System.Nullable<bool> DFA_ComplianceCheckProofOfPayment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_compliancecheckproofofpayment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_compliancecheckproofofpayment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckproofofpaymentname")]
		public string DFA_ComplianceCheckProofOfPaymentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_compliancecheckproofofpayment"))
				{
					return this.FormattedValues["dfa_compliancecheckproofofpayment"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckreviewedinvoice")]
		public System.Nullable<bool> DFA_ComplianceCheckReviewedInvoice
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_compliancecheckreviewedinvoice");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_compliancecheckreviewedinvoice", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_compliancecheckreviewedinvoicename")]
		public string DFA_ComplianceCheckReviewedInvoiceName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_compliancecheckreviewedinvoice"))
				{
					return this.FormattedValues["dfa_compliancecheckreviewedinvoice"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// This is the reimbursement % approved by DFA based on the Estimated Reimbursement % or the result of the Cost Share Calculation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_costsharing")]
		public System.Nullable<decimal> DFA_CostSharing
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("dfa_costsharing");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_costsharing", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_costsharingadjustment")]
		public Microsoft.Xrm.Sdk.Money DFA_CostSharingAdjustment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_costsharingadjustment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_costsharingadjustment", value);
			}
		}
		
		/// <summary>
		/// Value of the Cost Sharing Adjustment in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_costsharingadjustment_base")]
		public Microsoft.Xrm.Sdk.Money DFA_CostSharingAdjustment_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_costsharingadjustment_base");
			}
		}
		
		/// <summary>
		/// The amount that is to be paid as a result of changing the approved reimbursement %.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_costsharingadjustmentvalue")]
		public Microsoft.Xrm.Sdk.Money DFA_CostSharingAdjustmentValue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_costsharingadjustmentvalue");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_costsharingadjustmentvalue", value);
			}
		}
		
		/// <summary>
		/// Value of the Cost Sharing Adjustment Value in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_costsharingadjustmentvalue_base")]
		public Microsoft.Xrm.Sdk.Money DFA_CostSharingAdjustmentValue_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_costsharingadjustmentvalue_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_costsharingtemp")]
		public System.Nullable<decimal> DFA_CostSharingTemp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("dfa_costsharingtemp");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_costsharingtemp", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_createdonportal")]
		public System.Nullable<bool> DFA_CreatedOnPortal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_createdonportal");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_createdonportal", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_createdonportalname")]
		public string DFA_CreatedOnPortalName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_createdonportal"))
				{
					return this.FormattedValues["dfa_createdonportal"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_dategoodsandservicesreceived")]
		public System.Nullable<System.DateTime> DFA_DateGoodsAndServicesReceived
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_dategoodsandservicesreceived");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_dategoodsandservicesreceived", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_datereceivedinprovince")]
		public System.Nullable<System.DateTime> DFA_DateReceivedInProvince
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_datereceivedinprovince");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_datereceivedinprovince", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_datesentforeaapproval")]
		public System.Nullable<System.DateTime> DFA_DateSentForEAApproval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_datesentforeaapproval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_datesentforeaapproval", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_decision")]
		public virtual DFA_ProjectClaim_DFA_Decision? DFA_Decision
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DFA_ProjectClaim_DFA_Decision?)(EntityOptionSetEnum.GetEnum(this, "dfa_decision")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_decision", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_decisioncopy")]
		public virtual DFA_ProjectClaim_DFA_DecisionCopy? DFA_DecisionCopy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DFA_ProjectClaim_DFA_DecisionCopy?)(EntityOptionSetEnum.GetEnum(this, "dfa_decisioncopy")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_decisioncopy", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_decisioncopyname")]
		public string DFA_DecisionCopyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_decisioncopy"))
				{
					return this.FormattedValues["dfa_decisioncopy"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_decisionname")]
		public string DFA_DecisionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_decision"))
				{
					return this.FormattedValues["dfa_decision"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_eaname")]
		public Microsoft.Xrm.Sdk.EntityReference DFA_EAName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dfa_eaname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_eaname", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_eanamename")]
		public string DFA_EANameName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_eaname"))
				{
					return this.FormattedValues["dfa_eaname"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_eanameyominame")]
		public string DFA_EANameYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_eaname"))
				{
					return this.FormattedValues["dfa_eaname"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The amount the LG/IGB is to be paid.
///If this is an adjustable claim, then equal to the adjustable amount.
///Else, it is equal to the total amount after deductibles.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_eligiblepayable")]
		public Microsoft.Xrm.Sdk.Money DFA_EligiblePayable
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_eligiblepayable");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_eligiblepayable", value);
			}
		}
		
		/// <summary>
		/// Value of the Eligible payable in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_eligiblepayable_base")]
		public Microsoft.Xrm.Sdk.Money DFA_EligiblePayable_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_eligiblepayable_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_eligiblerecoverypayableat90")]
		public Microsoft.Xrm.Sdk.Money DFA_EligibleRecoveryPayableAt90
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_eligiblerecoverypayableat90");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_eligiblerecoverypayableat90", value);
			}
		}
		
		/// <summary>
		/// Value of the Eligible recovery payable at 90% in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_eligiblerecoverypayableat90_base")]
		public Microsoft.Xrm.Sdk.Money DFA_EligibleRecoveryPayableAt90_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_eligiblerecoverypayableat90_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_employeenumber")]
		public string DFA_EmployeeNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_employeenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_employeenumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthority")]
		public System.Nullable<bool> DFA_ExpenseAuthority
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_expenseauthority");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_expenseauthority", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthorityadditionalinfore")]
		public System.Nullable<bool> DFA_ExpenseAuthorityAdditionalInForE
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_expenseauthorityadditionalinfore");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_expenseauthorityadditionalinfore", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthorityadditionalinforename")]
		public string DFA_ExpenseAuthorityAdditionalInForename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_expenseauthorityadditionalinfore"))
				{
					return this.FormattedValues["dfa_expenseauthorityadditionalinfore"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthoritybluebookrates")]
		public System.Nullable<bool> DFA_ExpenseAuthorityBluebookRates
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_expenseauthoritybluebookrates");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_expenseauthoritybluebookrates", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthoritybluebookratesname")]
		public string DFA_ExpenseAuthorityBluebookRatesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_expenseauthoritybluebookrates"))
				{
					return this.FormattedValues["dfa_expenseauthoritybluebookrates"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthoritycontracts")]
		public System.Nullable<bool> DFA_ExpenseAuthorityContracts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_expenseauthoritycontracts");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_expenseauthoritycontracts", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthoritycontractsname")]
		public string DFA_ExpenseAuthorityContractsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_expenseauthoritycontracts"))
				{
					return this.FormattedValues["dfa_expenseauthoritycontracts"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthoritygeneralledger")]
		public System.Nullable<bool> DFA_ExpenseAuthorityGeneralLedger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_expenseauthoritygeneralledger");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_expenseauthoritygeneralledger", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthoritygeneralledgername")]
		public string DFA_ExpenseAuthorityGeneralLedgerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_expenseauthoritygeneralledger"))
				{
					return this.FormattedValues["dfa_expenseauthoritygeneralledger"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthorityname")]
		public string DFA_ExpenseAuthorityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_expenseauthority"))
				{
					return this.FormattedValues["dfa_expenseauthority"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthorityovertimewagedocumentation")]
		public System.Nullable<bool> DFA_ExpenseAuthorityOvertimeWageDocumentation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_expenseauthorityovertimewagedocumentation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_expenseauthorityovertimewagedocumentation", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthorityovertimewagedocumentationname")]
		public string DFA_ExpenseAuthorityOvertimeWageDocumentationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_expenseauthorityovertimewagedocumentation"))
				{
					return this.FormattedValues["dfa_expenseauthorityovertimewagedocumentation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthorityproofofpayment")]
		public System.Nullable<bool> DFA_ExpenseAuthorityProofOfPayment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_expenseauthorityproofofpayment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_expenseauthorityproofofpayment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthorityproofofpaymentname")]
		public string DFA_ExpenseAuthorityProofOfPaymentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_expenseauthorityproofofpayment"))
				{
					return this.FormattedValues["dfa_expenseauthorityproofofpayment"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthorityreviewedinvoice")]
		public System.Nullable<bool> DFA_ExpenseAuthorityReviewedInvoice
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_expenseauthorityreviewedinvoice");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_expenseauthorityreviewedinvoice", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_expenseauthorityreviewedinvoicename")]
		public string DFA_ExpenseAuthorityReviewedInvoiceName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_expenseauthorityreviewedinvoice"))
				{
					return this.FormattedValues["dfa_expenseauthorityreviewedinvoice"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indicates if this is the last claim on the project that the governing body will be submitting.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_finalclaim")]
		public System.Nullable<bool> DFA_FinalClaim
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_finalclaim");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_finalclaim", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_finalclaimname")]
		public string DFA_FinalClaimName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_finalclaim"))
				{
					return this.FormattedValues["dfa_finalclaim"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_fundedby")]
		public virtual DFA_ProjectClaim_DFA_FundedBy? DFA_FundedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DFA_ProjectClaim_DFA_FundedBy?)(EntityOptionSetEnum.GetEnum(this, "dfa_fundedby")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_fundedby", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_fundedbyname")]
		public string DFA_FundedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_fundedby"))
				{
					return this.FormattedValues["dfa_fundedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_gst5")]
		public Microsoft.Xrm.Sdk.Money DFA_Gst5
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_gst5");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_gst5", value);
			}
		}
		
		/// <summary>
		/// Value of the GST 5% in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_gst5_base")]
		public Microsoft.Xrm.Sdk.Money DFA_Gst5_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_gst5_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_includedinadvancedpaymentcalculations")]
		public System.Nullable<bool> DFA_IncludedInAdvancedPaymentCalculations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_includedinadvancedpaymentcalculations");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_includedinadvancedpaymentcalculations", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_includedinadvancedpaymentcalculationsname")]
		public string DFA_IncludedInAdvancedPaymentCalculationsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_includedinadvancedpaymentcalculations"))
				{
					return this.FormattedValues["dfa_includedinadvancedpaymentcalculations"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_invoicechange")]
		public System.Nullable<bool> DFA_InvoiceChange
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_invoicechange");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_invoicechange", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_invoicechangename")]
		public string DFA_InvoiceChangeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_invoicechange"))
				{
					return this.FormattedValues["dfa_invoicechange"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_invoicedate")]
		public System.Nullable<System.DateTime> DFA_InvoiceDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_invoicedate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_invoicedate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_invoicenumber")]
		public string DFA_InvoiceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_invoicenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_invoicenumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_invoicetotal")]
		public Microsoft.Xrm.Sdk.Money DFA_InvoiceTotal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_invoicetotal");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_invoicetotal", value);
			}
		}
		
		/// <summary>
		/// Value of the Invoice Total in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_invoicetotal_base")]
		public Microsoft.Xrm.Sdk.Money DFA_InvoiceTotal_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_invoicetotal_base");
			}
		}
		
		/// <summary>
		/// Indicates if it is a payment for the difference after a cost share recalculation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_isadjustmentclaim")]
		public System.Nullable<bool> DFA_IsAdjustmentClaim
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_isadjustmentclaim");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_isadjustmentclaim", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_isadjustmentclaimname")]
		public string DFA_IsAdjustmentClaimName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_isadjustmentclaim"))
				{
					return this.FormattedValues["dfa_isadjustmentclaim"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// If it is the first approved claim, then the $1,000 deductible is applied.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_isfirstclaim")]
		public System.Nullable<bool> DFA_IsFirstClaim
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_isfirstclaim");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_isfirstclaim", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_isfirstclaimname")]
		public string DFA_IsFirstClaimName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_isfirstclaim"))
				{
					return this.FormattedValues["dfa_isfirstclaim"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_lastcodingblocksubmissionerror")]
		public string DFA_LastCodingBlockSubmissionError
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_lastcodingblocksubmissionerror");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_lastcodingblocksubmissionerror", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_lessfirst1000")]
		public Microsoft.Xrm.Sdk.Money DFA_LessFirst1000
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_lessfirst1000");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_lessfirst1000", value);
			}
		}
		
		/// <summary>
		/// Value of the Less first $1,000 in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_lessfirst1000_base")]
		public Microsoft.Xrm.Sdk.Money DFA_LessFirst1000_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_lessfirst1000_base");
			}
		}
		
		/// <summary>
		/// An incremental number assigned to the claim in the portal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_name")]
		public string DFA_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_onetimedeductionamount")]
		public Microsoft.Xrm.Sdk.Money DFA_OnetimeDeductionAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_onetimedeductionamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_onetimedeductionamount", value);
			}
		}
		
		/// <summary>
		/// Value of the One time Deduction Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_onetimedeductionamount_base")]
		public Microsoft.Xrm.Sdk.Money DFA_OnetimeDeductionAmount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_onetimedeductionamount_base");
			}
		}
		
		/// <summary>
		/// The actual amount paid to the governing body.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_paidclaimamount")]
		public Microsoft.Xrm.Sdk.Money DFA_PaidClaimAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_paidclaimamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_paidclaimamount", value);
			}
		}
		
		/// <summary>
		/// Value of the Paid claim amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_paidclaimamount_base")]
		public Microsoft.Xrm.Sdk.Money DFA_PaidClaimAmount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_paidclaimamount_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_paygrouptype")]
		public virtual DFA_PayGroup? DFA_PayGroupType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DFA_PayGroup?)(EntityOptionSetEnum.GetEnum(this, "dfa_paygrouptype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_paygrouptype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_paygrouptypename")]
		public string DFA_PayGroupTypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_paygrouptype"))
				{
					return this.FormattedValues["dfa_paygrouptype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_paymentadvicecomments")]
		public string DFA_PaymentAdviceComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_paymentadvicecomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_paymentadvicecomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_portalsubmitted")]
		public System.Nullable<bool> DFA_PortalSubmitted
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_portalsubmitted");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_portalsubmitted", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_portalsubmittedname")]
		public string DFA_PortalSubmittedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_portalsubmitted"))
				{
					return this.FormattedValues["dfa_portalsubmitted"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_projectclaimid")]
		public System.Nullable<System.Guid> DFA_ProjectClaimId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("dfa_projectclaimid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_projectclaimid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_projectclaimid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.DFA_ProjectClaimId = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_projectnumber")]
		public Microsoft.Xrm.Sdk.EntityReference DFA_ProjectNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dfa_projectnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_projectnumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_projectnumbername")]
		public string DFA_ProjectNumberName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_projectnumber"))
				{
					return this.FormattedValues["dfa_projectnumber"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_projectstatusreportid")]
		public Microsoft.Xrm.Sdk.EntityReference DFA_ProjectStatusReportId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dfa_projectstatusreportid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_projectstatusreportid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_projectstatusreportidname")]
		public string DFA_ProjectStatusReportIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_projectstatusreportid"))
				{
					return this.FormattedValues["dfa_projectstatusreportid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_purpose")]
		public string DFA_Purpose
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_purpose");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_purpose", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiver")]
		public Microsoft.Xrm.Sdk.EntityReference DFA_QualifiedReceiver
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dfa_qualifiedreceiver");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_qualifiedreceiver", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiveradditionalinfore")]
		public System.Nullable<bool> DFA_QualifiedReceiverAdditionalInForE
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_qualifiedreceiveradditionalinfore");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_qualifiedreceiveradditionalinfore", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiveradditionalinforename")]
		public string DFA_QualifiedReceiverAdditionalInForename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_qualifiedreceiveradditionalinfore"))
				{
					return this.FormattedValues["dfa_qualifiedreceiveradditionalinfore"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiverbluebookrates")]
		public System.Nullable<bool> DFA_QualifiedReceiverBluebookRates
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_qualifiedreceiverbluebookrates");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_qualifiedreceiverbluebookrates", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiverbluebookratesname")]
		public string DFA_QualifiedReceiverBluebookRatesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_qualifiedreceiverbluebookrates"))
				{
					return this.FormattedValues["dfa_qualifiedreceiverbluebookrates"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceivercontracts")]
		public System.Nullable<bool> DFA_QualifiedReceiverContracts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_qualifiedreceivercontracts");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_qualifiedreceivercontracts", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceivercontractsname")]
		public string DFA_QualifiedReceiverContractsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_qualifiedreceivercontracts"))
				{
					return this.FormattedValues["dfa_qualifiedreceivercontracts"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceivergeneralledger")]
		public System.Nullable<bool> DFA_QualifiedReceiverGeneralLedger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_qualifiedreceivergeneralledger");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_qualifiedreceivergeneralledger", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceivergeneralledgername")]
		public string DFA_QualifiedReceiverGeneralLedgerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_qualifiedreceivergeneralledger"))
				{
					return this.FormattedValues["dfa_qualifiedreceivergeneralledger"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceivername")]
		public string DFA_QualifiedReceiverName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_qualifiedreceiver"))
				{
					return this.FormattedValues["dfa_qualifiedreceiver"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiverovertimewagedocumentatio")]
		public System.Nullable<bool> DFA_QualifiedReceiverOvertimeWageDocumentAtIo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_qualifiedreceiverovertimewagedocumentatio");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_qualifiedreceiverovertimewagedocumentatio", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiverovertimewagedocumentationame")]
		public string DFA_QualifiedReceiverOvertimeWageDocumentationAmE
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_qualifiedreceiverovertimewagedocumentatio"))
				{
					return this.FormattedValues["dfa_qualifiedreceiverovertimewagedocumentatio"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiverproofofpayment")]
		public System.Nullable<bool> DFA_QualifiedReceiverProofOfPayment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_qualifiedreceiverproofofpayment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_qualifiedreceiverproofofpayment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiverproofofpaymentname")]
		public string DFA_QualifiedReceiverProofOfPaymentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_qualifiedreceiverproofofpayment"))
				{
					return this.FormattedValues["dfa_qualifiedreceiverproofofpayment"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiverreviewedinvoice")]
		public System.Nullable<bool> DFA_QualifiedReceiverReviewedInvoice
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_qualifiedreceiverreviewedinvoice");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_qualifiedreceiverreviewedinvoice", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiverreviewedinvoicename")]
		public string DFA_QualifiedReceiverReviewedInvoiceName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_qualifiedreceiverreviewedinvoice"))
				{
					return this.FormattedValues["dfa_qualifiedreceiverreviewedinvoice"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiveryominame")]
		public string DFA_QualifiedReceiverYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_qualifiedreceiver"))
				{
					return this.FormattedValues["dfa_qualifiedreceiver"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_readyforeareview")]
		public System.Nullable<bool> DFA_ReadyForEAReview
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_readyforeareview");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_readyforeareview", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_readyforeareviewname")]
		public string DFA_ReadyForEAReviewName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_readyforeareview"))
				{
					return this.FormattedValues["dfa_readyforeareview"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_recommendataion")]
		public string DFA_RecommendAtaIon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_recommendataion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_recommendataion", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for Recovery Plan associated with Recovery Claim.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_recoveryplanid")]
		public Microsoft.Xrm.Sdk.EntityReference DFA_RecoveryPlanId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dfa_recoveryplanid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_recoveryplanid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_recoveryplanidname")]
		public string DFA_RecoveryPlanIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_recoveryplanid"))
				{
					return this.FormattedValues["dfa_recoveryplanid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_resp")]
		public Microsoft.Xrm.Sdk.EntityReference DFA_Resp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dfa_resp");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_resp", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_respname")]
		public string DFA_RespName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_resp"))
				{
					return this.FormattedValues["dfa_resp"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_s3validationpassed")]
		public System.Nullable<bool> DFA_S3ValidationPassed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_s3validationpassed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_s3validationpassed", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_s3validationpassedname")]
		public string DFA_S3ValidationPassedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_s3validationpassed"))
				{
					return this.FormattedValues["dfa_s3validationpassed"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_s3validationresult")]
		public string DFA_S3ValidationResult
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_s3validationresult");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_s3validationresult", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_s3validationtrigger")]
		public System.Nullable<int> DFA_S3ValidationTrigger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_s3validationtrigger");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_s3validationtrigger", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_selectedsupplierapiresponse")]
		public string DFA_SelectedSupplierApiResponse
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_selectedsupplierapiresponse");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_selectedsupplierapiresponse", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_serviceline")]
		public Microsoft.Xrm.Sdk.EntityReference DFA_ServiceLine
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dfa_serviceline");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_serviceline", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_servicelinename")]
		public string DFA_ServiceLineName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_serviceline"))
				{
					return this.FormattedValues["dfa_serviceline"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_site")]
		public string DFA_Site
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_site");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_site", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stageadjudicator")]
		public System.Nullable<int> DFA_StageAdjudicator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_stageadjudicator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_stageadjudicator", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stageapprovedpending")]
		public System.Nullable<int> DFA_StageApprovedPending
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_stageapprovedpending");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_stageapprovedpending", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stageclosed")]
		public System.Nullable<int> DFA_StageClosed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_stageclosed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_stageclosed", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stagecompliancecheck")]
		public System.Nullable<int> DFA_StageComplianceCheck
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_stagecompliancecheck");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_stagecompliancecheck", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stagedecisionmade")]
		public System.Nullable<int> DFA_StageDecisionMade
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_stagedecisionmade");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_stagedecisionmade", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stagedraft")]
		public System.Nullable<int> DFA_StageDraft
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_stagedraft");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_stagedraft", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stageexpenseauthority")]
		public System.Nullable<int> DFA_StageExpenseAuthority
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_stageexpenseauthority");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_stageexpenseauthority", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stagequalifiedreceiver")]
		public System.Nullable<int> DFA_StageQualifiedReceiver
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_stagequalifiedreceiver");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_stagequalifiedreceiver", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stagesubmitted")]
		public System.Nullable<int> DFA_StageSubmitted
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_stagesubmitted");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_stagesubmitted", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stageunderreview")]
		public System.Nullable<int> DFA_StageUnderReview
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_stageunderreview");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_stageunderreview", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stob")]
		public Microsoft.Xrm.Sdk.EntityReference DFA_Stob
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dfa_stob");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_stob", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stobname")]
		public string DFA_StobName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_stob"))
				{
					return this.FormattedValues["dfa_stob"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_submitted")]
		public System.Nullable<bool> DFA_Submitted
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_submitted");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_submitted", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_submittedbpf")]
		public virtual DFA_ProjectClaim_DFA_SubmittedBpf? DFA_SubmittedBpf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DFA_ProjectClaim_DFA_SubmittedBpf?)(EntityOptionSetEnum.GetEnum(this, "dfa_submittedbpf")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_submittedbpf", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_submittedbpfname")]
		public string DFA_SubmittedBpfName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_submittedbpf"))
				{
					return this.FormattedValues["dfa_submittedbpf"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_submittedname")]
		public string DFA_SubmittedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_submitted"))
				{
					return this.FormattedValues["dfa_submitted"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_suppliername")]
		public string DFA_SupplierName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_suppliername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_suppliername", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_suppliernumber")]
		public string DFA_SupplierNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dfa_suppliernumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_suppliernumber", value);
			}
		}
		
		/// <summary>
		/// To be deleted when the correct field in the BPF is created
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_tempapproval")]
		public System.Nullable<bool> DFA_TempApproval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_tempapproval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_tempapproval", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_tempapprovalname")]
		public string DFA_TempApprovalName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_tempapproval"))
				{
					return this.FormattedValues["dfa_tempapproval"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The total of 'Actual invoice total' from all the invoices on this claim: (Net invoiced being claimed) + (PST) + (Gross GST) = Actual invoice total
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalactualclaim")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalActualClaim
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalactualclaim");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totalactualclaim", value);
			}
		}
		
		/// <summary>
		/// Value of the Total Actual Claim in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalactualclaim_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalActualClaim_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalactualclaim_base");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Total Actual Claim.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalactualclaim_date")]
		public System.Nullable<System.DateTime> DFA_TotalActualClaim_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_totalactualclaim_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Total Actual Claim.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalactualclaim_state")]
		public System.Nullable<int> DFA_TotalActualClaim_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_totalactualclaim_state");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalactualclaimcopy")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalActualClaimCopy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalactualclaimcopy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totalactualclaimcopy", value);
			}
		}
		
		/// <summary>
		/// Value of the Total Actual Claim Copy in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalactualclaimcopy_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalActualClaimCopy_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalactualclaimcopy_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalactualinvoice")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalActualInvoice
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalactualinvoice");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totalactualinvoice", value);
			}
		}
		
		/// <summary>
		/// Value of the Total actual invoice in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalactualinvoice_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalActualInvoice_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalactualinvoice_base");
			}
		}
		
		/// <summary>
		/// The total from all the invoices from all the approved and partially approved invoices.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalapproved")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalApproved
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalapproved");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totalapproved", value);
			}
		}
		
		/// <summary>
		/// Value of the Total approved in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalapproved_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalApproved_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalapproved_base");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Approved claim total.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalapproved_date")]
		public System.Nullable<System.DateTime> DFA_TotalApproved_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_totalapproved_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Approved claim total.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalapproved_state")]
		public System.Nullable<int> DFA_TotalApproved_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_totalapproved_state");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalbeforetax")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalBeforeTax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalbeforetax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totalbeforetax", value);
			}
		}
		
		/// <summary>
		/// Value of the Total Before Tax in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalbeforetax_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalBeforeTax_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalbeforetax_base");
			}
		}
		
		/// <summary>
		/// If the governing body type is eligible for GST reimbursement, then this displays the total eligible GST from all the invoices on this claim.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totaleligiblegst")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalEligibleGst
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totaleligiblegst");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totaleligiblegst", value);
			}
		}
		
		/// <summary>
		/// Value of the Total eligible GST in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totaleligiblegst_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalEligibleGst_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totaleligiblegst_base");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Total eligible GST.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totaleligiblegst_date")]
		public System.Nullable<System.DateTime> DFA_TotalEligibleGst_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_totaleligiblegst_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Total eligible GST.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totaleligiblegst_state")]
		public System.Nullable<int> DFA_TotalEligibleGst_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_totaleligiblegst_state");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totaleligiblegstcopy")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalEligibleGstCopy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totaleligiblegstcopy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totaleligiblegstcopy", value);
			}
		}
		
		/// <summary>
		/// Value of the Total Eligible GST Copy in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totaleligiblegstcopy_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalEligibleGstCopy_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totaleligiblegstcopy_base");
			}
		}
		
		/// <summary>
		/// The total GST from all the invoices on this claim.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalgrossgst")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalGrossGst
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalgrossgst");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totalgrossgst", value);
			}
		}
		
		/// <summary>
		/// Value of the Total gross GST in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalgrossgst_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalGrossGst_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalgrossgst_base");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Total gross GST.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalgrossgst_date")]
		public System.Nullable<System.DateTime> DFA_TotalGrossGst_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_totalgrossgst_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Total gross GST.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalgrossgst_state")]
		public System.Nullable<int> DFA_TotalGrossGst_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_totalgrossgst_state");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalgrossgstcopy")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalGrossGstCopy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalgrossgstcopy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totalgrossgstcopy", value);
			}
		}
		
		/// <summary>
		/// Value of the Total gross GST Copy in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalgrossgstcopy_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalGrossGstCopy_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalgrossgstcopy_base");
			}
		}
		
		/// <summary>
		/// The total from all the invoices on this claim; the total of all 'Net invoiced being claimed'.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalnetinvoicedbeingclaimed")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalNetInvoicedBeingClaimed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalnetinvoicedbeingclaimed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totalnetinvoicedbeingclaimed", value);
			}
		}
		
		/// <summary>
		/// Value of the Total net invoiced being claimed in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalnetinvoicedbeingclaimed_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalNetInvoicedBeingClaimed_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalnetinvoicedbeingclaimed_base");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Total net invoices being claimed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalnetinvoicedbeingclaimed_date")]
		public System.Nullable<System.DateTime> DFA_TotalNetInvoicedBeingClaimed_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_totalnetinvoicedbeingclaimed_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Total net invoices being claimed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalnetinvoicedbeingclaimed_state")]
		public System.Nullable<int> DFA_TotalNetInvoicedBeingClaimed_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_totalnetinvoicedbeingclaimed_state");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalnetinvoicedbeingclaimedcopy")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalNetInvoicedBeingClaimedCopy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalnetinvoicedbeingclaimedcopy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totalnetinvoicedbeingclaimedcopy", value);
			}
		}
		
		/// <summary>
		/// Value of the Total net invoiced being claimed Copy in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalnetinvoicedbeingclaimedcopy_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalNetInvoicedBeingClaimedCopy_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalnetinvoicedbeingclaimedcopy_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totaloftotaleligible")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalOfTotalEligible
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totaloftotaleligible");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totaloftotaleligible", value);
			}
		}
		
		/// <summary>
		/// Value of the Total of total eligible in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totaloftotaleligible_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalOfTotalEligible_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totaloftotaleligible_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalpaid")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalPaid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalpaid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totalpaid", value);
			}
		}
		
		/// <summary>
		/// Value of the Total paid in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalpaid_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalPaid_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalpaid_base");
			}
		}
		
		/// <summary>
		/// The total PST from all the invoices on this claim.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalpst")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalPst
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalpst");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totalpst", value);
			}
		}
		
		/// <summary>
		/// Value of the Total PST in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalpst_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalPst_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalpst_base");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Total PST.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalpst_date")]
		public System.Nullable<System.DateTime> DFA_TotalPst_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("dfa_totalpst_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Total PST.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalpst_state")]
		public System.Nullable<int> DFA_TotalPst_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dfa_totalpst_state");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalpstcopy")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalPstCopy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalpstcopy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_totalpstcopy", value);
			}
		}
		
		/// <summary>
		/// Value of the Total PST Copy in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_totalpstcopy_base")]
		public Microsoft.Xrm.Sdk.Money DFA_TotalPstCopy_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("dfa_totalpstcopy_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_underreviewadditionalinforequested")]
		public System.Nullable<bool> DFA_UnderReviewAdditionalInfoRequested
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_underreviewadditionalinforequested");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_underreviewadditionalinforequested", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_underreviewadditionalinforequestedname")]
		public string DFA_UnderReviewAdditionalInfoRequestedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_underreviewadditionalinforequested"))
				{
					return this.FormattedValues["dfa_underreviewadditionalinforequested"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_underreviewinprogress")]
		public System.Nullable<bool> DFA_UnderReviewInProgress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("dfa_underreviewinprogress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dfa_underreviewinprogress", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_underreviewinprogressname")]
		public string DFA_UnderReviewInProgressName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("dfa_underreviewinprogress"))
				{
					return this.FormattedValues["dfa_underreviewinprogress"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangerAte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Status of the Recovery Claim
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual DFA_ProjectClaim_StateCode? StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DFA_ProjectClaim_StateCode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the Recovery Claim
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual DFA_ProjectClaim_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((DFA_ProjectClaim_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UtcConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 dfa_dfa_clientcode_dfa_projectclaim_ClientCodeId
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_clientcodeid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("dfa_dfa_clientcode_dfa_projectclaim_ClientCodeId")]
		public Database.Model.DFA_ClientCode DFA_DFA_ClientCode_DFA_ProjectClaim_ClientCodeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.DFA_ClientCode>("dfa_dfa_clientcode_dfa_projectclaim_ClientCodeId", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.DFA_ClientCode>("dfa_dfa_clientcode_dfa_projectclaim_ClientCodeId", null, value);
			}
		}
		
		/// <summary>
		/// N:1 dfa_emcr_expenseproject_dfa_projectclaim_ProjectNumber
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_projectnumber")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("dfa_emcr_expenseproject_dfa_projectclaim_ProjectNumber")]
		public Database.Model.EMCR_ExpenseProject DFA_EMCR_ExpenseProject_DFA_ProjectClaim_ProjectNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.EMCR_ExpenseProject>("dfa_emcr_expenseproject_dfa_projectclaim_ProjectNumber", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.EMCR_ExpenseProject>("dfa_emcr_expenseproject_dfa_projectclaim_ProjectNumber", null, value);
			}
		}
		
		/// <summary>
		/// N:1 dfa_emcr_responsibilitycentre_dfa_projectclaim_RESP
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_resp")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("dfa_emcr_responsibilitycentre_dfa_projectclaim_RESP")]
		public Database.Model.EMCR_ResponsibilityCentre DFA_EMCR_ResponsibilityCentre_DFA_ProjectClaim_Resp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.EMCR_ResponsibilityCentre>("dfa_emcr_responsibilitycentre_dfa_projectclaim_RESP", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.EMCR_ResponsibilityCentre>("dfa_emcr_responsibilitycentre_dfa_projectclaim_RESP", null, value);
			}
		}
		
		/// <summary>
		/// N:1 dfa_emcr_serviceline_dfa_projectclaim_ServiceLine
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_serviceline")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("dfa_emcr_serviceline_dfa_projectclaim_ServiceLine")]
		public Database.Model.EMCR_ServiceLine DFA_EMCR_ServiceLine_DFA_ProjectClaim_ServiceLine
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.EMCR_ServiceLine>("dfa_emcr_serviceline_dfa_projectclaim_ServiceLine", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.EMCR_ServiceLine>("dfa_emcr_serviceline_dfa_projectclaim_ServiceLine", null, value);
			}
		}
		
		/// <summary>
		/// N:1 dfa_emcr_stob_dfa_projectclaim_STOB
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_stob")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("dfa_emcr_stob_dfa_projectclaim_STOB")]
		public Database.Model.EMCR_Stob DFA_EMCR_Stob_DFA_ProjectClaim_Stob
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.EMCR_Stob>("dfa_emcr_stob_dfa_projectclaim_STOB", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.EMCR_Stob>("dfa_emcr_stob_dfa_projectclaim_STOB", null, value);
			}
		}
		
		/// <summary>
		/// N:1 dfa_systemuser_dfa_projectclaim_EAName
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_eaname")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("dfa_systemuser_dfa_projectclaim_EAName")]
		public Database.Model.SystemUser DFA_SystemUser_DFA_ProjectClaim_EAnaMe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.SystemUser>("dfa_systemuser_dfa_projectclaim_EAName", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.SystemUser>("dfa_systemuser_dfa_projectclaim_EAName", null, value);
			}
		}
		
		/// <summary>
		/// N:1 dfa_systemuser_dfa_projectclaim_QualifiedReceiver
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dfa_qualifiedreceiver")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("dfa_systemuser_dfa_projectclaim_QualifiedReceiver")]
		public Database.Model.SystemUser DFA_SystemUser_DFA_ProjectClaim_QualifiedReceiver
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.SystemUser>("dfa_systemuser_dfa_projectclaim_QualifiedReceiver", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.SystemUser>("dfa_systemuser_dfa_projectclaim_QualifiedReceiver", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_dfa_projectclaim_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_dfa_projectclaim_createdby")]
		public Database.Model.SystemUser Lk_DFA_ProjectClaim_CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.SystemUser>("lk_dfa_projectclaim_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_dfa_projectclaim_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_dfa_projectclaim_createdonbehalfby")]
		public Database.Model.SystemUser Lk_DFA_ProjectClaim_CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.SystemUser>("lk_dfa_projectclaim_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.SystemUser>("lk_dfa_projectclaim_createdonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_dfa_projectclaim_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_dfa_projectclaim_modifiedby")]
		public Database.Model.SystemUser Lk_DFA_ProjectClaim_ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.SystemUser>("lk_dfa_projectclaim_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_dfa_projectclaim_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_dfa_projectclaim_modifiedonbehalfby")]
		public Database.Model.SystemUser Lk_DFA_ProjectClaim_ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.SystemUser>("lk_dfa_projectclaim_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.SystemUser>("lk_dfa_projectclaim_modifiedonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 user_dfa_projectclaim
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_dfa_projectclaim")]
		public Database.Model.SystemUser User_DFA_ProjectClaim
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.SystemUser>("user_dfa_projectclaim", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public DFA_ProjectClaim(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["dfa_projectclaimid"] = base.Id;
                        break;
                    case "dfa_projectclaimid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
